!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
/	.config/nvim/init.vim	/^map \/ <Plug>(easymotion-sn)$/;"	m
/	.config/nvim/init.vim	/^omap \/ <Plug>(easymotion-tn)$/;"	m
0	.config/nvim/init.vim	/^noremap 0 ^$/;"	m
<C-\>	.config/nvim/init.vim	/^map <C-\\> :vsp <CR>:exec("call LanguageClient_textDocument_definition()")<CR>$/;"	m
<C-h>	.config/nvim/init.vim	/^map <C-h> <C-w>h$/;"	m
<C-j>	.config/nvim/init.vim	/^map <C-j> <C-w>j$/;"	m
<C-k>	.config/nvim/init.vim	/^imap <C-k>     <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-k>	.config/nvim/init.vim	/^map <C-k> <C-w>k$/;"	m
<C-l>	.config/nvim/init.vim	/^map <C-l> <C-w>l$/;"	m
<Esc>	.config/nvim/init.vim	/^nnoremap <Esc> :noh<CR><Esc>$/;"	m
<F3>	.config/nvim/init.vim	/^nnoremap <F3> :NumbersToggle<CR>$/;"	m
<Leader>,b	.config/nvim/init.vim	/^nnoremap <Leader>,b :FuzzySearchBookmark <CR>$/;"	m
<Leader>,c	.config/nvim/init.vim	/^nnoremap <Leader>,c :GCheckout <CR>$/;"	m
<Leader>,e	.config/nvim/init.vim	/^noremap <Leader>,e :set g:ale_set_quickfix = 1<CR>$/;"	m
<Leader>,e	.config/nvim/init.vim	/^vmap <Leader>,e :set g:ale_set_quickfix = 1<CR>$/;"	m
<Leader>,f	.config/nvim/init.vim	/^noremap <Leader>,f :Neoformat<CR>$/;"	m
<Leader>,f	.config/nvim/init.vim	/^vmap <Leader>,f :Neoformat<CR>$/;"	m
<Leader>,n	.config/nvim/init.vim	/^noremap <Leader>,n :ALENext<CR>	$/;"	m
<Leader>,n	.config/nvim/init.vim	/^vmap <Leader>,n :ALENext<CR>	$/;"	m
<Leader>,v	.config/nvim/init.vim	/^noremap <Leader>,v :ALEPrevious<CR>	$/;"	m
<Leader>,v	.config/nvim/init.vim	/^vmap <Leader>,v :ALEPrevious<CR>	$/;"	m
<Leader>,w	.config/nvim/init.vim	/^noremap <Leader>,w :ImportJSFix<CR>$/;"	m
<Leader>,w	.config/nvim/init.vim	/^vmap <Leader>,w :ImportJSFix<CR>$/;"	m
<Leader><Leader>	.config/nvim/init.vim	/^nnoremap <Leader><Leader> <C-^>$/;"	m
<Leader><Space>	.config/nvim/init.vim	/^nnoremap <Leader><Space> :FZF <CR>$/;"	m
<Leader>T	.config/nvim/init.vim	/^nmap <silent> <Leader>T :TestFile<CR>$/;"	m
<Leader>\	.config/nvim/init.vim	/^nnoremap <silent> <Leader>\\ :call OpenNerdTree()<CR>$/;"	m
<Leader>cl	.config/nvim/init.vim	/^noremap <Leader>cl :lclose<CR>$/;"	m
<Leader>gc	.config/nvim/init.vim	/^map <Leader>gc :Gstatus<CR>$/;"	m
<Leader>gf	.config/nvim/init.vim	/^map <Leader>gf :ImportJSGoto<CR>$/;"	m
<Leader>h	.config/nvim/init.vim	/^nmap <Leader>h <Plug>(ale_previous_wrap)$/;"	m
<Leader>l	.config/nvim/init.vim	/^nmap <Leader>l <Plug>(ale_next_wrap)$/;"	m
<Leader>ne	.config/nvim/init.vim	/^noremap <Leader>ne :lNext<CR>$/;"	m
<Leader>nt	.config/nvim/init.vim	/^map <Leader>nt :NERDTreeToggle<CR>$/;"	m
<Leader>t	.config/nvim/init.vim	/^nmap <silent> <Leader>t :TestNearest<CR>$/;"	m
<Leader>tg	.config/nvim/init.vim	/^nnoremap <Leader>tg :call neoterm#toggle()<cr>$/;"	m
<bs>	.config/nvim/init.vim	/^nmap <bs> :<c-u>TmuxNavigateLeft<cr>$/;"	m
<leader>,s	.config/nvim/init.vim	/^nnoremap <leader>,s :exe 'Ag!' expand('<cword>')<cr>$/;"	m
<leader><C-\>	.config/nvim/init.vim	/^map <leader><C-\\> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m
<leader>e	.config/nvim/init.vim	/^map <leader>e :e <C-R>=expand("%:p:h") . "\/" <CR>	$/;"	m
<leader>ev	.config/nvim/init.vim	/^nnoremap <leader>ev :vsplit $MYVIMRC<cr>$/;"	m
<leader>gt	.config/nvim/init.vim	/^map <leader>gt :call TimeLapse() <cr> $/;"	m
<s-tab>	.config/nvim/init.vim	/^inoremap <expr><s-tab>$/;"	m
<tab>	.config/nvim/init.vim	/^inoremap <expr><tab>$/;"	m
Alfred theme	README.md	/^## Alfred theme$/;"	h
Dotfiles	README.md	/^# Dotfiles$/;"	h
FAQ	README.md	/^# FAQ$/;"	h
First	README.md	/^## First$/;"	h
Fonts	README.md	/^## Fonts$/;"	h
Fourth	README.md	/^## Fourth$/;"	h
FuzzySearchBookmark	.config/nvim/init.vim	/^command! -bang -nargs=* FuzzySearchBookmark$/;"	c
GCheckout	.config/nvim/init.vim	/^command! -bang -nargs=* GCheckout$/;"	c
Get all commands that available	README.md	/^### Get all commands that available$/;"	h
Get mapped commands	README.md	/^### Get mapped commands$/;"	h
Git `save` and `continue`	README.md	/^## Git `save` and `continue`$/;"	h
Install brew `z`	README.md	/^## Install brew `z`$/;"	h
Install:	README.md	/^# Install:$/;"	h
Italic fonts in NeoVim	README.md	/^### Italic fonts in NeoVim$/;"	h
List git history of a file	README.md	/^### List git history of a file$/;"	h
Multiple_cursors_after	.config/nvim/init.vim	/^function! Multiple_cursors_after()$/;"	f
Multiple_cursors_before	.config/nvim/init.vim	/^function! Multiple_cursors_before()$/;"	f
Neovim: problem with python?	README.md	/^## Neovim: problem with python?$/;"	h
On new machine	README.md	/^## On new machine$/;"	h
On old machine.	README.md	/^## On old machine.$/;"	h
OpenNerdTree	.config/nvim/init.vim	/^function! OpenNerdTree()$/;"	f
Pro mode	README.md	/^## Pro mode$/;"	h
Problem with vim or tmux yank?	README.md	/^## Problem with vim or tmux yank?$/;"	h
Second	README.md	/^## Second$/;"	h
Third	README.md	/^## Third$/;"	h
Tmux enable mouse & clipboard copy	README.md	/^## Tmux enable mouse & clipboard copy$/;"	h
Usage:	README.md	/^# Usage:$/;"	h
You Want This - but on Vim	README.md	/^# You Want This - but on Vim$/;"	h
[NEW] Follow this blog	README.md	/^## [NEW] Follow this blog$/;"	h
^	.config/nvim/init.vim	/^noremap ^ 0$/;"	m
export TERM=xterm-256color-italic	README.md	/^#   export TERM=xterm-256color-italic$/;"	h
g:EasyMotion_do_mapping	.config/nvim/init.vim	/^let g:EasyMotion_do_mapping = 0$/;"	v
g:EasyMotion_smartcase	.config/nvim/init.vim	/^let g:EasyMotion_smartcase = 1$/;"	v
g:Guifont	.config/nvim/init.vim	/^let g:Guifont="Operator Mono:h14"$/;"	v
g:LanguageClient_autoStart	.config/nvim/init.vim	/^let g:LanguageClient_autoStart = 1$/;"	v
g:LanguageClient_serverCommands	.config/nvim/init.vim	/^let g:LanguageClient_serverCommands = {$/;"	v
g:UltiSnipsExpandTrigger	.config/nvim/init.vim	/^let g:UltiSnipsExpandTrigger = "<c-k>"$/;"	v
g:airline_theme	.config/nvim/init.vim	/^let g:airline_theme='oceanicnext'$/;"	v
g:ale_fix_on_save	.config/nvim/init.vim	/^let g:ale_fix_on_save = 0$/;"	v
g:ale_fixers	.config/nvim/init.vim	/^let g:ale_fixers = {$/;"	v
g:ale_linters	.config/nvim/init.vim	/^let g:ale_linters = {$/;"	v
g:ale_list_window_size	.config/nvim/init.vim	/^let g:ale_list_window_size = 5$/;"	v
g:ale_open_list	.config/nvim/init.vim	/^let g:ale_open_list = 0$/;"	v
g:ale_set_loclist	.config/nvim/init.vim	/^let g:ale_set_loclist = 0$/;"	v
g:ale_set_quickfix	.config/nvim/init.vim	/^let g:ale_set_quickfix = 0$/;"	v
g:deoplete#disable_auto_complete	.config/nvim/init.vim	/^let g:deoplete#disable_auto_complete = 0$/;"	v
g:deoplete#enable_at_startup	.config/nvim/init.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_camel_case	.config/nvim/init.vim	/^let g:deoplete#enable_camel_case = 1$/;"	v
g:deoplete#enable_ignore_case	.config/nvim/init.vim	/^let g:deoplete#enable_ignore_case = 1$/;"	v
g:deoplete#enable_smart_case	.config/nvim/init.vim	/^let g:deoplete#enable_smart_case = 1$/;"	v
g:jsx_ext_required	.config/nvim/init.vim	/^let g:jsx_ext_required = 0$/;"	v
g:lightline	.config/nvim/init.vim	/^let g:lightline = {}$/;"	v
g:lightline	.config/nvim/init.vim	/^let g:lightline.active = { 'right': [[ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ]], 'left': [ [ 'mode', 'paste' ], [ 'readonly', 'relativepath', 'modified' ] ] }$/;"	v
g:lightline	.config/nvim/init.vim	/^let g:lightline.component_expand = {$/;"	v
g:lightline	.config/nvim/init.vim	/^let g:lightline.component_type = {$/;"	v
g:neoformat_enabled_javascript	.config/nvim/init.vim	/^let g:neoformat_enabled_javascript = ['prettier']$/;"	v
g:neoformat_try_formatprg	.config/nvim/init.vim	/^let g:neoformat_try_formatprg = 1$/;"	v
g:neosnippet#enable_snipmate_compatibility	.config/nvim/init.vim	/^let g:neosnippet#enable_snipmate_compatibility = 1$/;"	v
g:neosnippet#snippets_directory	.config/nvim/init.vim	/^let g:neosnippet#snippets_directory='~\/.vim\/bundle\/vim-snippets\/snippets'$/;"	v
g:neoterm_automap_keys	.config/nvim/init.vim	/^let g:neoterm_automap_keys = ',,t'$/;"	v
g:neoterm_size	.config/nvim/init.vim	/^let g:neoterm_size = '80v'$/;"	v
gA	.config/nvim/init.vim	/^nnoremap gA :Ag! <cword><CR>$/;"	m
javaScript_fold	.config/nvim/init.vim	/^let javaScript_fold=1 $/;"	v
jj	.config/nvim/init.vim	/^imap jj <Esc>$/;"	m
jk	.config/nvim/init.vim	/^imap jk <Esc>$/;"	m
mapleader	.config/nvim/init.vim	/^let mapleader = ","$/;"	v
open_bookmark_file	.config/nvim/init.vim	/^function! s:open_bookmark_file(line)$/;"	f
open_branch_fzf	.config/nvim/init.vim	/^function! s:open_branch_fzf(line)$/;"	f
test#strategy	.config/nvim/init.vim	/^let test#strategy = "neoterm"$/;"	v
tic xterm-256color-italic.terminfo	README.md	/^#   tic xterm-256color-italic.terminfo$/;"	h
